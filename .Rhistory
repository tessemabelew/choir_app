import streamlit as st
import psycopg2
# Database connection
def connect_db():
return psycopg2.connect(
host="database-1-instance-1.csnckkm8e9hq.us-east-1.rds.amazonaws.com",
dbname="postgres",
user="postgres",
password="Saba123@",
port=5432
)
exit
st.title("Tourism Investment Entry - Ethiopia")
menu = st.sidebar.selectbox("Choose form", ["Add Region", "Add Destination", "Add Opportunity"])
if menu == "Add Region":
name = st.text_input("Region Name")
if st.button("Submit Region"):
conn = connect_db()
cur = conn.cursor()
cur.execute("INSERT INTO region (name) VALUES (%s)", (name,))
conn.commit()
conn.close()
st.success("Region added!")
print('Hello')
# Add Destination
elif menu == "Add Destination":
name = st.text_input("Destination Name")
region_id = st.number_input("Region ID", min_value=1)
description = st.text_area("Description")
latitude = st.number_input("Latitude", format="%.6f")
longitude = st.number_input("Longitude", format="%.6f")
if st.button("Submit Destination"):
conn = connect_db()
cur = conn.cursor()
cur.execute("""
INSERT INTO destination (name, region_id, description, latitude, longitude)
VALUES (%s, %s, %s, %s, %s)
""", (name, region_id, description, latitude, longitude))
conn.commit()
conn.close()
st.success("Destination added!")
# Add Tourism Opportunity
elif menu == "Add Opportunity":
destination_id = st.number_input("Destination ID", min_value=1)
title = st.text_input("Title")
investment_type = st.text_input("Investment Type")
value = st.number_input("Estimated Value (USD)")
roi = st.number_input("Expected ROI (%)", min_value=0.0)
status = st.selectbox("Status", ["Open", "In Progress", "Completed"])
person = st.text_input("Contact Person")
email = st.text_input("Contact Email")
if st.button("Submit Opportunity"):
conn = connect_db()
cur = conn.cursor()
cur.execute("""
INSERT INTO tourism_opportunity
(destination_id, title, investment_type, estimated_value_usd, expected_roi_percent, status, contact_person, contact_email)
VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
""", (destination_id, title, investment_type, value, roi, status, person, email))
conn.commit()
conn.close()
st.success("Tourism Opportunity added!")
def connect_db():
return psycopg2.connect(
host="database-1-instance-1.csnckkm8e9hq.us-east-1.rds.amazonaws.com",
dbname="postgres",
user="database-1",
password="WhyNotNow@",
port=5432
)
SELECT usename FROM pg_user;
import streamlit as st
import psycopg2
# Database connection
def connect_db():
return psycopg2.connect(
host="database-1-instance-1.csnckkm8e9hq.us-east-1.rds.amazonaws.com",
dbname="postgres",
user="postgres",
password="WhyNotNow1",
port=5432
)
st.title("Tourism Investment Entry - Ethiopia")
menu = st.sidebar.selectbox("Choose form", ["Add Region", "Add Destination", "Add Opportunity"])
# Add Region
if menu == "Add Region":
region_id int = st.number_input("Region_id", min_value=1)
name = st.selectbox("Region_name", ["Afar", "Amhara", "Benishangul-Gumuz", "Central Ethiopia", "Gambela", "Harari", "Oromia", "Sidama", "Somali", "South Ethiopia", "South West Ethiopia Peoples' Region"])
if st.button("Submit Region"):
conn = connect_db()
cur = conn.cursor()
cur.execute("INSERT INTO region (name) VALUES (%s)", (name,))
conn.commit()
conn.close()
st.success("Region added!")
# Add Destination
elif menu == "Add Destination":
name = st.text_input("Destination Name")
region_id = st.number_input("Region ID", min_value=1)
description = st.text_area("Description")
latitude = st.number_input("Latitude", format="%.6f")
longitude = st.number_input("Longitude", format="%.6f")
if st.button("Submit Destination"):
conn = connect_db()
cur = conn.cursor()
cur.execute("""
INSERT INTO destination (name, region_id, description, latitude, longitude)
VALUES (%s, %s, %s, %s, %s)
""", (name, region_id, description, latitude, longitude))
conn.commit()
conn.close()
st.success("Destination added!")
# Add Tourism Opportunity
elif menu == "Add Opportunity":
destination_id = st.number_input("Destination ID", min_value=1)
title = st.text_input("Title")
investment_type = st.text_input("Investment Type")
value = st.number_input("Estimated Value (USD)")
roi = st.number_input("Expected ROI (%)", min_value=0.0)
status = st.selectbox("Status", ["Open", "In Progress", "Completed"])
person = st.text_input("Contact Person")
email = st.text_input("Contact Email")
if st.button("Submit Opportunity"):
conn = connect_db()
cur = conn.cursor()
cur.execute("""
INSERT INTO tourism_opportunity
(destination_id, title, investment_type, estimated_value_usd, expected_roi_percent, status, contact_person, contact_email)
VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
""", (destination_id, title, investment_type, value, roi, status, person, email))
conn.commit()
conn.close()
st.success("Tourism Opportunity added!")
reticulate::repl_python()
reticulate::repl_python()
setwd("~")
setwd("~")
import streamlit as st
reticulate::repl_python()
reticulate::repl_python()
setwd("~")
reticulate::repl_python()
install.packages("PyPDF2")
library(PyPDF2)
install.packages("Rtools")
reticulate::repl_python()
library(docx)
install.packages("docx")
reticulate::repl_python()
setwd("~")
setwd("~")
reticulate::repl_python()
install.packages("rsconnect")
library(rsconnect)
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
library(devtools)
devtools::install_github("rstudio/rsconnect")
rsconnect::accountInfo()
import streamlit as st
reticulate::repl_python()
library(streamlit)
reticulate::repl_python()
reticulate::repl_python()
setwd("~")
getwd()
library(streamlit)
reticulate::repl_python()
setwd("~")
streamlit run Choir_songs_app.py
reticulate::repl_python()
setwd("C:/Users/tesse")
setwd("C:/Users/tesse")
reticulate::repl_python()
setwd("~")
setwd("C:/Users/tesse")
setwd("C:/Users/tesse/choir_app")
reticulate::repl_python()
